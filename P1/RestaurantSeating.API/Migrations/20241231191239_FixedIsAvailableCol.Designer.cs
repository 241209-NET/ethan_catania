// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantSeating.API.Data;

#nullable disable

namespace RestaurantSeating.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20241231191239_FixedIsAvailableCol")]
    partial class FixedIsAvailableCol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantSeating.API.Model.Section", b =>
                {
                    b.Property<int>("Id_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_PK"));

                    b.PrimitiveCollection<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_tables")
                        .HasColumnType("int");

                    b.Property<int>("Server_FK")
                        .HasColumnType("int");

                    b.HasKey("Id_PK");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("RestaurantSeating.API.Model.Server", b =>
                {
                    b.Property<int>("Id_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_PK"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_PK");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("RestaurantSeating.API.Model.Table", b =>
                {
                    b.Property<int>("Table_numPK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Table_numPK"));

                    b.PrimitiveCollection<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_seats")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId_PK")
                        .HasColumnType("int");

                    b.Property<int>("Section_FK")
                        .HasColumnType("int");

                    b.Property<int>("Server_FK")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Table_numPK");

                    b.HasIndex("SectionId_PK");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("RestaurantSeating.API.Model.Table", b =>
                {
                    b.HasOne("RestaurantSeating.API.Model.Section", null)
                        .WithMany("Tables")
                        .HasForeignKey("SectionId_PK");
                });

            modelBuilder.Entity("RestaurantSeating.API.Model.Section", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
